{
    "id": "297b4fb1-95e5-404a-ba0d-1315cb5fd563",
    "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "created": "2019-06-06T20:33:52.021197Z",
    "inputs": [
        {
            "name": "inputs"
        }
    ],
    "outputs": [
        {
            "data": "steps.5.produce",
            "name": "output"
        }
    ],
    "steps": [
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                "version": "0.2.0",
                "python_path": "d3m.primitives.data_transformation.denormalize.Common",
                "name": "Denormalize datasets",
                "digest": "c9b20f7259a8a8066fe19f50e7dfb60a742c4ff6d222ad4b012f292bd44e7716"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "inputs.0"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "name": "Extract a DataFrame from a Dataset",
                "digest": "db27f0d242ff948ac1e25aeb18fcf3404be636d82013fa58dee3aac34500f48e"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.0.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "8837cc45-457e-4e9d-84c9-09050f6c2070",
                "version": "0.1.0",
                "python_path": "d3m.primitives.data_transformation.encoder.DistilTextReader",
                "name": "Columns text reader",
                "digest": "b634b1828e8b0b936da39cef8a1995dabcaca38fda2be98d519d7a112e6bb45a"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.1.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "use_columns": {
                    "type": "VALUE",
                    "data": [
                        0,
                        1
                    ]
                },
                "return_result": {
                    "type": "VALUE",
                    "data": "replace"
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "7b67eef9-f14e-4219-bf0c-5222880eac78",
                "version": "0.1.0",
                "python_path": "d3m.primitives.data_transformation.column_parser.DistilSimpleColumnParser",
                "name": "Simple column parser",
                "digest": "879ad0ac1c77876acc9af3a06b52dfd91a6648ac33ccee9c65970edb5dd3b450"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.2.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                },
                {
                    "id": "produce_target"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "24f51246-7487-454e-8d69-7cdf289994d1",
                "version": "0.1.0",
                "python_path": "d3m.primitives.data_transformation.encoder.DistilTextClassifier",
                "name": "Text Classifier",
                "digest": "aadf74155e554881e34675c05312e0c6f7b423539639d631bd1849c925a8483d"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.3.produce"
                },
                "outputs": {
                    "type": "CONTAINER",
                    "data": "steps.3.produce_target"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "metric": {
                    "type": "VALUE",
                    "data": "f1"
                },
                "fast": {
                    "type": "VALUE",
                    "data": true
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                "name": "Construct pipeline predictions output",
                "digest": "f3a3d19cb609c3c414d853ec895bc73638a361d507f1381470380ba37a7a5761"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.4.produce"
                },
                "reference": {
                    "type": "CONTAINER",
                    "data": "steps.3.produce_target"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "use_columns": {
                    "type": "VALUE",
                    "data": [
                        0,
                        1
                    ]
                }
            }
        }
    ],
    "digest": "90947abffc84c3db897c4c2467d91fa20437bc94001d8b8bdacbd2f6d11efe9c"
}
